{
  "__inputs": [
    {
      "name": "DS_ZABBIX_UNICO",
      "label": "Zabbix Unico",
      "description": "",
      "type": "datasource",
      "pluginId": "alexanderzobnin-zabbix-datasource",
      "pluginName": "Zabbix"
    },
    {
      "name": "DS_GDP_SUPCD",
      "label": "GDP_SUPCD",
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    },
    {
      "name": "VAR_LINK",
      "type": "constant",
      "label": "link",
      "value": "",
      "description": ""
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "aidanmountford-html-panel",
      "name": "HTML",
      "version": "0.0.2"
    },
    {
      "type": "datasource",
      "id": "alexanderzobnin-zabbix-datasource",
      "name": "Zabbix",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.5.4"
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": false,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [
    {
      "icon": "dashboard",
      "tags": [],
      "title": "Voltar",
      "tooltip": "",
      "type": "link",
      "url": "$link"
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "alexanderzobnin-zabbix-datasource",
        "uid": "${DS_ZABBIX_UNICO}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "rx"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Recepção"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "tx"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Transmissão"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 13,
        "x": 0,
        "y": 0
      },
      "id": 20,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "mean",
            "max",
            "last"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "application": {
            "filter": ""
          },
          "countTriggersBy": "",
          "datasource": {
            "type": "alexanderzobnin-zabbix-datasource",
            "uid": "${DS_ZABBIX_UNICO}"
          },
          "functions": [
            {
              "added": true,
              "def": {
                "category": "Alias",
                "defaultParams": [
                  "/(.*)/",
                  "$1"
                ],
                "name": "replaceAlias",
                "params": [
                  {
                    "name": "regexp",
                    "type": "string"
                  },
                  {
                    "name": "newAlias",
                    "type": "string"
                  }
                ]
              },
              "params": [
                "/.*(Entrada|Saída).*/",
                "$1"
              ],
              "text": "replaceAlias(/(.*)/, $1)"
            }
          ],
          "group": {
            "filter": "/WAN/MODELO/"
          },
          "host": {
            "filter": "/$zabbix/"
          },
          "item": {
            "filter": "/^Tráfego_.*(Entrada|Saída).*$interface .*$circuito.*/"
          },
          "itemTag": {
            "filter": ""
          },
          "macro": {
            "filter": ""
          },
          "options": {
            "count": false,
            "disableDataAlignment": false,
            "showDisabledItems": false,
            "skipEmptyValues": false,
            "useTrends": "default",
            "useZabbixValueMapping": false
          },
          "proxy": {
            "filter": ""
          },
          "queryType": "0",
          "refId": "A",
          "resultFormat": "time_series",
          "schema": 12,
          "table": {
            "skipEmptyValues": false
          },
          "tags": {
            "filter": ""
          },
          "textFilter": "",
          "trigger": {
            "filter": ""
          }
        }
      ],
      "title": "Utilização do Circuito $circuito - $velocidade",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "alexanderzobnin-zabbix-datasource",
        "uid": "${DS_ZABBIX_UNICO}"
      },
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "value"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "0": {
                        "text": "   0%   "
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 13,
        "y": 0
      },
      "id": 21,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": true,
        "showThresholdMarkers": true,
        "text": {
          "valueSize": 14
        }
      },
      "pluginVersion": "9.5.4",
      "targets": [
        {
          "application": {
            "filter": ""
          },
          "countTriggersBy": "",
          "datasource": {
            "type": "alexanderzobnin-zabbix-datasource",
            "uid": "${DS_ZABBIX_UNICO}"
          },
          "functions": [],
          "group": {
            "filter": "/WAN/MODELO/"
          },
          "host": {
            "filter": "/$zabbix/"
          },
          "item": {
            "filter": "CPU - % Utilização"
          },
          "itemTag": {
            "filter": ""
          },
          "macro": {
            "filter": ""
          },
          "options": {
            "count": false,
            "disableDataAlignment": false,
            "showDisabledItems": false,
            "skipEmptyValues": false,
            "useTrends": "default",
            "useZabbixValueMapping": false
          },
          "proxy": {
            "filter": ""
          },
          "queryType": "0",
          "refId": "A",
          "resultFormat": "time_series",
          "schema": 12,
          "table": {
            "skipEmptyValues": false
          },
          "tags": {
            "filter": ""
          },
          "textFilter": "",
          "trigger": {
            "filter": ""
          }
        }
      ],
      "title": "CPU",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "alexanderzobnin-zabbix-datasource",
        "uid": "${DS_ZABBIX_UNICO}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 30,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Tempo (ms)"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 0
      },
      "id": 23,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "mean",
            "max",
            "last"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "application": {
            "filter": ""
          },
          "countTriggersBy": "",
          "datasource": {
            "type": "alexanderzobnin-zabbix-datasource",
            "uid": "${DS_ZABBIX_UNICO}"
          },
          "functions": [
            {
              "added": true,
              "def": {
                "category": "Alias",
                "defaultParams": [
                  "/(.*)/",
                  "$1"
                ],
                "name": "replaceAlias",
                "params": [
                  {
                    "name": "regexp",
                    "type": "string"
                  },
                  {
                    "name": "newAlias",
                    "type": "string"
                  }
                ]
              },
              "params": [
                "/.*(Tempo de Resposta).*/",
                "$1"
              ],
              "text": "replaceAlias(/(.*)/, $1)"
            }
          ],
          "group": {
            "filter": "/WAN/MODELO/"
          },
          "host": {
            "filter": "/$zabbix/"
          },
          "item": {
            "filter": "ICMP - Tempo de Resposta"
          },
          "itemTag": {
            "filter": ""
          },
          "macro": {
            "filter": ""
          },
          "options": {
            "count": false,
            "disableDataAlignment": false,
            "showDisabledItems": false,
            "skipEmptyValues": false,
            "useTrends": "default",
            "useZabbixValueMapping": false
          },
          "proxy": {
            "filter": ""
          },
          "queryType": "0",
          "refId": "A",
          "resultFormat": "time_series",
          "schema": 12,
          "table": {
            "skipEmptyValues": false
          },
          "tags": {
            "filter": ""
          },
          "textFilter": "",
          "trigger": {
            "filter": ""
          }
        }
      ],
      "title": "Tempo de Resposta",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "alexanderzobnin-zabbix-datasource",
        "uid": "${DS_ZABBIX_UNICO}"
      },
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 13,
        "y": 4
      },
      "id": 22,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": true,
        "showThresholdMarkers": true,
        "text": {
          "valueSize": 14
        }
      },
      "pluginVersion": "9.5.4",
      "targets": [
        {
          "application": {
            "filter": ""
          },
          "countTriggersBy": "",
          "datasource": {
            "type": "alexanderzobnin-zabbix-datasource",
            "uid": "${DS_ZABBIX_UNICO}"
          },
          "functions": [],
          "group": {
            "filter": "/WAN/MODELO/"
          },
          "host": {
            "filter": "/$zabbix/"
          },
          "item": {
            "filter": "Memória - % Utilização"
          },
          "itemTag": {
            "filter": ""
          },
          "macro": {
            "filter": ""
          },
          "options": {
            "count": false,
            "disableDataAlignment": false,
            "showDisabledItems": false,
            "skipEmptyValues": false,
            "useTrends": "default",
            "useZabbixValueMapping": false
          },
          "proxy": {
            "filter": ""
          },
          "queryType": "0",
          "refId": "A",
          "resultFormat": "time_series",
          "schema": 12,
          "table": {
            "skipEmptyValues": false
          },
          "tags": {
            "filter": ""
          },
          "textFilter": "",
          "trigger": {
            "filter": ""
          }
        }
      ],
      "title": "Memória",
      "type": "gauge"
    },
    {
      "aliasColors": {},
      "css_data": "*{\r\n    box-sizing: border-box;\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n}\r\nbody{\r\n    font-family: Helvetica;\r\n    -webkit-font-smoothing: antialiased;\r\n    /*background: rgba( 71, 147, 227, 1);*/\r\n}\r\nh2{\r\n    text-align: center;\r\n    font-size: 18px;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    color: white;\r\n    padding: 30px 0;\r\n}\r\n\r\n/* Table Styles */\r\n\r\n.table-container {\r\n    display: inline-block;\r\n    width: auto;\r\n    height: 200px;                  /* Altura do container */\r\n    overflow: auto;\r\n\tfont-style: normal;\r\n\tfont-family: arial;verdana;\r\n\tfont-size: 13px;\r\n\tcolor: #6495ED;\r\n\tdisplay:block;\r\n\tborder-collapse: collapse;\r\n\tborder: 0px solid gray;\r\n//    overflow: scroll;\r\n}\r\n\r\n::-webkit-scrollbar{width:5px;border-left:1px solid #E6ECF8;}\r\n::-webkit-scrollbar-thumb{background-color:#0066ff;}\r\n\r\n\r\n.table-wrapper{\r\n    margin: 1px 7px 7px;\r\n    box-shadow: 0px 35px 50px rgba( 0, 0, 0, 0.2 );\r\n}\r\n\r\n.fl-table {\r\n    border-radius: 5px;\r\n    font-size: 12px;\r\n    font-weight: normal;\r\n    border: none;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    white-space: nowrap;\r\n    background-color: white;\r\n}\r\n\r\n.fl-table td, .fl-table th {\r\n    text-align: center;\r\n    padding: 3px;\r\n}\r\n\r\n.fl-table td {\r\n    border-right: 1px solid #f8f8f8;\r\n    font-size: 12px;\r\n}\r\n\r\n.fl-table thead th {\r\n    \r\n    border-right: 1px solid #f8f8f8;\r\n    border-bottom: 1px solid #f8f8f8;\r\n    border-top: 1px solid #f8f8f8;\r\n    border-left: 1px solid #f8f8f8;\r\n    position: sticky;                   /* fixa o cabecaolho */\r\n    top: 0;                             /* fixa o cabecaolho */\r\n    color: #ffffff;                     /*cor da font das colunas de cabecalho par head */\r\n    background: #0066ff;\r\n    font-size: 14px;\r\n    font-family: cursive; arial;\r\n    font-weight: normal;\r\n}\r\n\r\n\r\n.fl-table tr:nth-child(even) {\r\n    color: #000000;\r\n    background: #F8F8F8;    /*cor fundo das colunas impares de informacoes  */\r\n}\r\n\r\n.fl-table tr:nth-child(odd) {\r\n    color: #000099;\r\n    background: #e0e0e0;    /*cor fundo das colunas pares de informacoes  */\r\n}\r\n\r\n/* Responsive */\r\n\r\n@media (max-width: 767px) {\r\n    .fl-table {\r\n        display: block;\r\n        width: 100%;\r\n    }\r\n    .table-wrapper:before{\r\n        content: \"Scroll horizontally >\";\r\n        display: block;\r\n        text-align: right;\r\n        font-size: 11px;\r\n        color: white;\r\n        padding: 0 0 10px;\r\n    }\r\n    .fl-table thead, .fl-table tbody, .fl-table thead th {\r\n        display: block;\r\n    }\r\n    .fl-table thead th:last-child{\r\n        border-bottom: none;\r\n    }\r\n    .fl-table thead {\r\n        float: left;\r\n    }\r\n    .fl-table tbody {\r\n        width: auto;\r\n        position: relative;\r\n        overflow-x: auto;\r\n    }\r\n    .fl-table td, .fl-table th {\r\n        padding: 20px .625em .625em .625em;\r\n        height: 60px;\r\n        vertical-align: middle;\r\n        box-sizing: border-box;\r\n        overflow-x: hidden;\r\n        overflow-y: auto;\r\n        width: 120px;\r\n        font-size: 13px;\r\n        text-overflow: ellipsis;\r\n    }\r\n    .fl-table thead th {\r\n        text-align: left;\r\n        border-bottom: 1px solid #f7f7f9;\r\n    }\r\n    .fl-table tbody tr {\r\n        display: table-cell;\r\n    }\r\n    .fl-table tbody tr:nth-child(odd) {\r\n        background: none;\r\n    }\r\n    .fl-table tr:nth-child(even) {\r\n        background: transparent;\r\n    }\r\n    .fl-table tr td:nth-child(odd) {\r\n        background: #F8F8F8;\r\n        border-right: 1px solid #E6E4E4;\r\n    }\r\n    .fl-table tr td:nth-child(even) {\r\n        border-right: 1px solid #E6E4E4;\r\n    }\r\n    .fl-table tbody td {\r\n        display: block;\r\n        text-align: center;\r\n    }\r\n}\r\n\r\n",
      "datasource": {
        "type": "postgres",
        "uid": "${DS_GDP_SUPCD}"
      },
      "description": "",
      "doInit": {},
      "format": "short",
      "gridPos": {
        "h": 10,
        "w": 16,
        "x": 0,
        "y": 8
      },
      "handleMetric": {},
      "html_data": "<div class=\"table-container\">\r\n<div class=\"table-wrapper\">\r\n    <table class=\"fl-table\">\r\n        <thead>\r\n        <tr>\r\n            <th>Header 1</th>\r\n            <th>Header 2</th>\r\n            <th>Header 3</th>\r\n            <th>Header 4</th>\r\n            <th>Header 5</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr>\r\n            <td>Content 1</td>\r\n            <td>Content 1</td>\r\n            <td>Content 1</td>\r\n            <td>Content 1</td>\r\n            <td>Content 1</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Content 2</td>\r\n            <td>Content 2</td>\r\n            <td>Content 2</td>\r\n            <td>Content 2</td>\r\n            <td>Content 2</td>\r\n        </tr>\r\n\r\n        <tbody>\r\n    </table>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "id": 17,
      "js_code": "// jshint strict: false\r\n\r\n/*\r\n+-------------------------------------------------------+\r\n| Programa de atualizacao da informacoes de desempenho  |\r\n| rodando provisoriamente na maquina 81                 |\r\n| /srv/www/cgi-bin/Utilitarios/IndicadoresWanGtic/      |\r\n| atualIndicadoresWanGtic.sh                            |\r\n+-------------------------------------------------------+\r\n*/\r\n\r\n\r\nvar valor=[]; var cpm=[]; var color;   var trab; var falha = [];\r\n\r\n\r\n\r\n/* Armazenando dados das Consultas */\r\nvar e08 = []; var s08 = []; var e12 = []; var s12 = []; var e14 = []; var s14 = []; \r\nvar errin = []; var errout = []; var desin = []; var desout = []; var pro = []; var cpu = []; var mem = [];\r\n\r\nvar fe08 = []; var fs08 = []; var fe12 = []; var fs12 = []; var fe14 = []; var fs14 = []; \r\nvar ferrin = []; var ferrout = []; var fdesin = []; var fdesout = []; var fpro = []; var fcpu = []; var fmem = [];\r\n\r\nvar color = [];\r\n\r\ncolor[0] = \"#000000\";\r\ncolor[-1] = \"#AA1700\";\r\ncolor[1] = \"#AA1700\";\r\n\r\nctrl.data.forEach((item) => {\r\n    let valor = item.datapoints.map((d) => d[0]);\r\n     \r\n    for (var i=0; i < valor.length; i++){ \r\n\r\n        let cpm  = valor[i].split(';');\r\n        \r\n        cpm[0] = cpm[0].replace(/-/g, \"/\");\r\n        if (cpm[1] == -1) { cpm[1] = \"s/c\"; }\r\n        if (cpm[2] == -1) { cpm[2] = \"s/c\"; }\r\n        if (cpm[3] == -1) { cpm[3] = \"s/c\"; }\r\n        cpu[cpm[0]] = cpm[1]; mem[cpm[0]] = cpm[2]; pro[cpm[0]] = cpm[3];\r\n        \r\n        /* Ajust para alinhar valores menores que 10 */\r\n        if(cpm[4] < 10) {cpm[4] = '&nbsp&nbsp'+cpm[4]; }\r\n        if(cpm[5] < 10) {cpm[5] = '&nbsp&nbsp'+cpm[5]; }\r\n        if(cpm[6] < 10) {cpm[6] = '&nbsp&nbsp'+cpm[6]; }\r\n        if(cpm[7] < 10) {cpm[7] = '&nbsp&nbsp'+cpm[7]; }\r\n        if(cpm[8] < 10) {cpm[8] = '&nbsp&nbsp'+cpm[8]; }\r\n        if(cpm[9] < 10) {cpm[9] = '&nbsp&nbsp'+cpm[9]; }\r\n\r\n        e08[cpm[0]] = cpm[4]; s08[cpm[0]] = cpm[5];\r\n        e12[cpm[0]] = cpm[6]; s12[cpm[0]] = cpm[7];\r\n        e14[cpm[0]] = cpm[8]; s14[cpm[0]] = cpm[9];\r\n        errin[cpm[0]] = cpm[10]; errout[cpm[0]] = cpm[11];\r\n        desin[cpm[0]] = cpm[12]; desout[cpm[0]] = cpm[13];\r\n       \r\n        //alert(cpm[6]+\"---\"+cpm[8]);\r\n        \r\n        /* Armazena os campos em falha */\r\n        falha = cpm[14].split(',');\r\n        fcpu[cpm[0]] = falha[0]; fmem[cpm[0]] = falha[1]; fpro[cpm[0]] = falha[2];\r\n        fe08[cpm[0]] = falha[3]; fs08[cpm[0]] = falha[4];\r\n        fe12[cpm[0]] = falha[5]; fs12[cpm[0]] = falha[6];\r\n        fe14[cpm[0]] = falha[7]; fs14[cpm[0]] = falha[8];\r\n        ferrin[cpm[0]] = falha[9]; ferrout[cpm[0]] = falha[10];\r\n        fdesin[cpm[0]] = falha[11]; fdesout[cpm[0]] = falha[12];\r\n     \r\n    }     \r\n});  \r\n/* Fim do armazenamento das Consultas */\r\n\r\n\r\nvar html = ' ' ;\r\n\r\nhtml += '\t<!-- Inicio do HTML -->';\r\nhtml += '\t<!DOCTYPE html>';\r\nhtml += '\t<head>';\r\nhtml += '\t<meta http-equiv=Content-Type content=text/html;charset=iso-8859-1>';\r\nhtml += '\t<style>';\r\n\r\n\r\nhtml += '*{';\r\nhtml += '    box-sizing: border-box;';\r\nhtml += '    -webkit-box-sizing: border-box;';\r\nhtml += '    -moz-box-sizing: border-box;';\r\nhtml += '}';\r\nhtml += 'body{';\r\nhtml += '    font-family: Helvetica;';\r\nhtml += '    -webkit-font-smoothing: antialiased;';\r\n    /*background: rgba( 71, 147, 227, 1);*/\r\nhtml += '}';\r\nhtml += 'h2{';\r\nhtml += '    text-align: center;';\r\nhtml += '    font-size: 18px;';\r\nhtml += '    text-transform: uppercase;';\r\nhtml += '    letter-spacing: 1px;';\r\nhtml += '    color: white;';\r\nhtml += '    padding: 30px 0;';\r\nhtml += '}';\r\n\r\n/* Table Styles */\r\n\r\nhtml += '.table-container {';\r\nhtml += '   display: inline-block;';\r\nhtml += '   width: auto;';\r\nhtml += '   height: 220px;';                  /* Altura do container */\r\nhtml += '   overflow: auto;';\r\nhtml += '\tfont-style: normal;';\r\nhtml += '\tfont-family: arial;verdana;';\r\nhtml += '\tfont-size: 13px;';\r\nhtml += '\tcolor: #6495ED;';\r\nhtml += '\tdisplay:block;';\r\nhtml += '\tborder-collapse: collapse;';\r\nhtml += '\tborder: 0px solid gray;';\r\n//    overflow: scroll;\r\nhtml += '}';\r\n\r\nhtml += '::-webkit-scrollbar{width:5px;border-left:1px solid #E6ECF8;}';\r\nhtml += '::-webkit-scrollbar-thumb{background-color:#AAAAAA;}';\r\n\r\n\r\nhtml += '.table-wrapper{';\r\nhtml += '    margin: 0px 10px 10px;';\r\nhtml += '    box-shadow: 0px 35px 50px rgba( 0, 0, 0, 0.2 );';\r\nhtml += '}';\r\n\r\nhtml += '.fl-table {';\r\nhtml += '    border-radius: 5px;';\r\nhtml += '    font-size: 12px;';\r\nhtml += '    font-weight: normal;';\r\nhtml += '    border: none;';\r\nhtml += '    border-collapse: collapse;';\r\nhtml += '    width: 100%;';\r\nhtml += '    max-width: 100%;';\r\nhtml += '    white-space: wrap;';                   /* permite quebra de linha na coluna */\r\nhtml += '    background-color: white;';\r\nhtml += '}';\r\n\r\nhtml += '.fl-table td, .fl-table th {';\r\nhtml += '    text-align: center;';\r\nhtml += '    padding: 3px;';\r\nhtml += '}';\r\n\r\nhtml += '.fl-table td {';\r\nhtml += '    border-right: 1px solid #f8f8f8;';\r\nhtml += '    font-size: 13px;';\r\nhtml += '}';\r\n\r\nhtml += '.fl-table thead th {';\r\n    \r\nhtml += '    border-right: 2px solid #f8f8f8;';\r\nhtml += '    border-bottom: 2px solid #f8f8f8;';\r\nhtml += '    border-top: 2px solid #f8f8f8;';\r\nhtml += '    border-left: 2px solid #f8f8f8;';\r\nhtml += '    position: sticky;';                   /* fixa o cabecaolho */\r\nhtml += '    top: 0;';                             /* fixa o cabecaolho */\r\nhtml += '    color: #ffffff;';                     /*cor da font das colunas de cabecalho par head */\r\nhtml += '    background: #222222;';\r\nhtml += '    font-size: 14px;';\r\nhtml += '    font-family: cursive; arial;';\r\nhtml += '    font-weight: normal;';\r\n//html += '    min-width: 95px;';\r\nhtml += '}';\r\n\r\n\r\nhtml += '.fl-table tr:nth-child(even) {';\r\nhtml += '    color: #000000;';\r\nhtml += '    background: #AAAAAA;';    /*cor fundo das colunas impares de informacoes  */\r\nhtml += '}';\r\n\r\nhtml += '.fl-table tr:nth-child(odd) {';\r\nhtml += '    color: #000000;';\r\nhtml += '    background: #BBBBBB;';    /*cor fundo das colunas pares de informacoes  */\r\nhtml += '}';\r\n\r\nhtml += '\t</style>';\r\n\r\nhtml += '\t<title>Agentes Zabbix</title>';\r\nhtml += '\t</head>';\r\n\r\nhtml += '\t<body  vlink=#000000 alink=#000000 link=#000000 bgcolor=\"#000000\">';\r\nhtml += '   <div class=\"table-container\">';\r\n    html += '   <div class=\"table-wrapper\">';\r\n    \r\n    html += '   <table class=\"fl-table\">';\r\n\r\n    /* CABECALHO DAS COLUNAS */\r\n    html += '   <thead>';\r\n    html += '   <tr>';\r\n    html += '       <th>Data</th>';\r\n    html += '       <th>Utilização Entrada</th>';\r\n    html += '       <th>Utilização Saída</th>';\r\n    html += '       <th>Erro Entrada</th>';\r\n    html += '       <th>Erro Saída</th>';\r\n    html += '       <th>Descarte Entrada</th>';\r\n    html += '       <th>Descarte Saída</th>';\r\n    html += '       <th>Latência</th>';\r\n    html += '       <th>CPU</th>';\r\n    html += '       <th>Memória</th>';\r\n    html += '   </tr>';\r\n    html += '   </thead>';\r\n\r\n    html += '   <tbody>';\r\n\r\n    /* CONTEUDO DAS COLUNAS */\r\n    /* PROGRAMACAO  */\r\n\r\n    for (let key in e08) {\r\n \r\n        html += '   <tr>';\r\n        html += '       <td>'+key+'</td>';            \r\n        html += '       <td><font color='+color[fe08[key]]+'>'+e08[key]+'% </font>(08:00)<br><font color='+color[fe12[key]]+'>'+e12[key]+'% </font>(12:00)<br><font color='+color[fe14[key]]+'>'+e14[key]+'% </font>(14:00)</td>';\r\n        html += '       <td><font color='+color[fs08[key]]+'>'+s08[key]+'% </font>(08:00)<br><font color='+color[fs12[key]]+'>'+s12[key]+'% </font>(12:00)<br><font color='+color[fs14[key]]+'>'+s14[key]+'% </font>(14:00)</td>';\r\n        html += '       <td><font color='+color[ferrin[key]]+'>'+errin[key]+'</font></td>';\r\n        html += '       <td><font color='+color[ferrout[key]]+'>'+errout[key]+'</font></td>';\r\n        html += '       <td><font color='+color[fdesin[key]]+'>'+desin[key]+'</font></td>';\r\n        html += '       <td><font color='+color[fdesout[key]]+'>'+desout[key]+'</font></td>';\r\n        //html += '       <td><font color='+color[fpro[key]]+'>'+pro[key]+'</font></td>';\r\n        html += '       <td><font color=\"#000000\">'+pro[key]+'</font></td>';\r\n        //html += '       <td><font color='+color[fcpu[key]]+'>'+cpu[key]+'</font></td>';\r\n        html += '       <td><font color=\"#000000\">'+cpu[key]+'</font></td>';\r\n        //html += '       <td><font color='+color[fmem[key]]+'>'+mem[key]+'</font></td>';\r\n        html += '       <td><font color=\"#000000\">'+mem[key]+'</font></td>';\r\n        html += '   </tr>';\r\n\r\n        \r\n    }\r\n    \r\n\r\n    /* FIM PROGRAMACAO  */\r\n    /* FIM CONTEUDO DAS COLUNAS */\r\n\r\n\r\n    html += '   <tbody>';\r\n\r\n\r\n    html += '   </table>';\r\n\r\n    html += '</div>';\r\nhtml += '</div>';\r\n\r\n//html += '<br>';\r\nhtml += '</body>';\r\nhtml += '</html>';\r\n\r\n\r\nhtmlnode.innerHTML = html;\r\n\r\n\r\n\r\n\r\n/* \r\nvar html = ' ' ;\r\nhtml += '\t<!-- Inicio do HTML -->';\r\nhtml += '\t<!DOCTYPE html>';\r\nhtml += '\t<head>';\r\nhtml += '\t<meta http-equiv=Content-Type content=text/html;charset=iso-8859-1>';\r\nhtml += '\t<style>';\r\nhtml += '\ttable {';\r\nhtml += '\t\ttable-layout: fixed;';\r\nhtml += '\t\twidth: 100%;';\r\n\r\nhtml += '\t}';\r\n\r\nhtml += '\t.table-container {';\r\nhtml += '\t    display: inline-block;';\r\n//html += '\t    width: 950px;';\r\nhtml += '\t    height: 200px;';\r\nhtml += '\t    overflow: auto;';\r\nhtml += '\t\tfont-style: normal;';\r\nhtml += '\t\tfont-family: arial;verdana;';\r\nhtml += '\t\tfont-size: 12px;';\r\nhtml += '\t\tcolor: #6495ED;';\r\nhtml += '\t\tdisplay:block;';\r\nhtml += '       border-collapse: collapse;';\r\nhtml += '\t\tborder: 2px solid gray;';\r\n//html += '\t    overflow: scroll;';\r\nhtml += '\t}';\r\n\r\nhtml += '\ttd,th {';\r\n//html += '\t\ttable-layout: auto;';\r\n//html += '\t\twidth: 100%;';\r\n//html += '\t\tfont-style: normal;';\r\n//html += '\t\tfont-family: arial;verdana;';\r\n//html += '\t\tfont-size: 12px;';\r\n//html += '\t\tcolor: #6495ED;';\r\n//html += '\t\tdisplay:block;';\r\n//html += '       border-collapse: collapse;';\r\nhtml += '\t\tborder: 1px solid gray;';\r\n//html += '\t    overflow: scroll;';\r\nhtml += '\t}';\r\n\r\n\r\n\r\n//html += '\ttable th,';\r\n//html += '\ttable td {';\r\n//html += '\t\tborder: 1px solid white;';\r\n//html += '\t    white-space: nowrap;';\r\n//html += '\t    padding: 10px 20px';\r\n//html += '\t    font-family: Arial;';\r\n//html += '\t}';\r\n\r\n//html += '\ttable tr th:first-child,';\r\n//html += '\ttable td:first-child {';\r\n//html += '\t    position: sticky;';\r\n//html += '\t    color: #6495ED;';\r\n//html += '\t    width: 100px;';\r\n//html += '\t    left: 1;';\r\n//html += '\t    z-index: 10;';\r\n//html += '\t    background: #fff;'\r\n//html += '\t}';\r\n\r\n//html += '\ttable tr th:first-child {';\r\n//html += '\t    z-index: 11;';\r\n//html += '\t}';\r\n\r\n//html += '   th tr {';\r\n//html += '\t    border: 1px solid gray;';\r\n//html += '\t    color: #6495ED;';\r\n//html += '\t    z-index: 9;';\r\n//html += '\t    background: #000;';\r\n//html += '\t}';\r\n\r\nhtml += '\t</style>';\r\n\r\nhtml += '\t<title>GDP_MPLS</title>';\r\nhtml += '\t</head>';\r\nhtml += '\t<body  vlink=#0000BC alink=#0000BC link=#0000BC bgcolor=\"#aa3aaa\">';\r\nhtml += '\t<!-- #-------------------------------------------------------------------------# -->';\r\nhtml += '\t<!-- # INICIO DA TABELA EXTERNA PARA ALINHAMENTO NO I.E.                       # -->';\r\nhtml += '\t<!-- #-------------------------------------------------------------------------# -->';\r\n\r\n//html += '<div align=\"center\"><font size=\"4\" color=\"white\" width=\"auto\">Indicadores de Desempenho </font> </div>';\r\n\r\nhtml += '<div class=\"table-container\">';\r\n\r\nhtml += '<table>';\r\n//html += '  <tbody>'; \r\n//html += '<tr  style=\"text-align: center;\"> <td colspan=16\" > <font size=\"5\"; color=\"white\";> Indicadores de Desempenho </font></td></tr>'\r\nhtml += '<tr><th>Data</th><th>Utilização<br>Entrada</th><th>Utilização<br>Saída</th><th>Erro<br>Entrada</th><th>Erro<br>Saída</th><th>Descarte<br>Entrada</th><th>Descarte<br>Saída</th><th>Propagação</th><th>CPU</th><th>Memória</th></tr>';\r\n //width=\"80px\"\r\n//########################################### ROTINA DE CARGA DE VARIÁVEIS ##################################\r\nctrl.data.forEach((item) => {\r\n     valor = item.datapoints.map((d) => d[0]);\r\n     //alert(valor)\r\n});  \r\n//-------------------------- FIM DA CARGA DE VARIÁVEIS ------------------------------------------\r\n\r\n//############################## CRIAÇÃO DAS LINHAS DE NOTICIAS  ##################################\r\n\r\n\r\nfor (var i=0; i < valor.length; i++){ \r\n        \r\n       cpm  = valor[i].split(';');\r\n       trab = cpm[14].split(',');\r\n       \r\n        for (var r=0; r < trab.length; r++){\r\n            let kk= r + 1;\r\n            if(trab[r] == 1){ color[kk] = \"#F9364D\"; } else{ color[kk] = \"white\"; }\r\n             \r\n            //alert(r  + '= '+ trab[r]  + '= '+ kk  + '= '+ color[kk] ); \r\n       }\r\n      \r\n      var tcolor = \"#D2691E\"; \r\n\r\n//alert('Pos='+ i + '  data=' + cpm[0] +'  cpu='+ cpm[1]+'  mem='+cpm[2]  +'  propagacao='+ cpm[3]+'  erro_e='+ cpm[4]+'erro_s='+ cpm[5]+'descarte_e='+ cpm[6]+'descarte_s='+ cpm[7]+'e08='+ cpm[8]+'s08='+ cpm[9]+'e12='+ cpm[10]+'s12='+ cpm[11]+'e14='+ cpm[12]+'s14='+ cpm[13]);       \r\n    html += '<tr><td align=\"center\"><font color=\"#6495ED\" > <b> ';\r\n    html += cpm[0];  \r\n    html += '</b> </font></td> <td align=\"center\"> <font color=' + color[4] + ' ><b>';\r\n    html += cpm[4];\r\n    html += '</b>%</font> <font size=\"1\" color=\"#cccccc\"> (08:00)</font> <br> <font color=' + color[6] + ' ><b> ' ;\r\n    html += cpm[6];\r\n    html += '</b>% </font> <font size=\"1\" font size=\"1\" color=\"#cccccc\">(12:00)</font> <br> <font color=' + color[8] + ' ><b>';\r\n    html += cpm[8];\r\n    html += '</b>%</font>  <font size=\"1\" font size=\"1\" color=\"#cccccc\">(14:00)</font> </td> <td align=\"center\"> <font color=' + color[5] + ' ><b>';\r\n    html += cpm[5];\r\n    html += '</b>% </font> <font size=\"1\" font size=\"1\" color=\"#cccccc\">(08:00)</font>  <br><font color=' + color[7] + ' > <b>' ;\r\n    html += cpm[7];\r\n    html += '</b>% </font> <font size=\"1\" font size=\"1\" color=\"#cccccc\">(12:00)</font>  <br> <font color=' + color[9] + ' ><b>' ;\r\n    html += cpm[9];\r\n    html += '</b>%</font>  <font size=\"1\" font size=\"1\" color=\"#cccccc\">(14:00)</font> </td> <td align=\"center\"><font color=' + color[10] + ' > <b>';\r\n    html += cpm[10];\r\n    html += '</b>%</font></td> <td align=\"center\"> <font color=' + color[11] + ' ><b>';\r\n    html += cpm[11];\r\n    html += '</b>%</font></td> <td align=\"center\"> <font color=' + color[12] + ' ><b>';\r\n    html += cpm[12];\r\n    html += '</b>% </font></font></td> <td align=\"center\"><font color=' + color[13] + ' > <b>';\r\n    html += cpm[13];\r\n    html += '</b>% </font></td> <td align=\"center\"> <font color=' + color[3] + ' ><b>';\r\n    html += cpm[3];\r\n    html += '</b>ms</font> </td> <td align=\"center\"> <font color=' + color[1] + ' ><b>';\r\n    html += cpm[1];\r\n    html += '</b>% </font></td> <td align=\"center\"> <font color=' + color[2] + ' ><b>';\r\n    html += cpm[2];\r\n    html += '</b>% </font></td></tr>';\r\n       //html += '</font></td></tr>'\r\n\r\n}\r\n//-------------------------- FIM DA CRIAÇÃO ------------------------------------------\r\n//html += '</tbody>';\r\nhtml += '</table>';\r\n\r\nhtml += '</div>';\r\n\r\n//html += '<br>';\r\nhtml += '</body>';\r\nhtml += '</html>';\r\n\r\nhtmlnode.innerHTML = html;\r\n\r\n*/",
      "js_init_code": "",
      "links": [],
      "maxDataPoints": 3,
      "nullPointMode": "connected",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_GDP_SUPCD}"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select concat(to_char(data,'dd-mm-yyyy'),';',cpu,';',mem,';',propagacao,';',e08,';',s08,';',e12,';',s12,';',e14,';',s14,';',erro_e,';',erro_s,';',descarte_e,';',descarte_s,';',desvio_ans) as \"DADOS\", data::timestamp as time from  indicadores_desempenho_gtic where hostname ~* '$zabbix' and interface = '$interface' and $__timeFilter(data) order by data;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "txbyte"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "recursoswan",
          "timeColumn": "horario",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Indicadores de Desempenho $proprietario",
      "transparent": true,
      "type": "aidanmountford-html-panel"
    },
    {
      "datasource": {
        "type": "alexanderzobnin-zabbix-datasource",
        "uid": "${DS_ZABBIX_UNICO}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 30,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Tempo (ms)"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 8
      },
      "id": 15,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "application": {
            "filter": ""
          },
          "countTriggersBy": "",
          "datasource": {
            "type": "alexanderzobnin-zabbix-datasource",
            "uid": "${DS_ZABBIX_UNICO}"
          },
          "functions": [
            {
              "added": true,
              "def": {
                "category": "Alias",
                "defaultParams": [
                  "/(.*)/",
                  "$1"
                ],
                "name": "replaceAlias",
                "params": [
                  {
                    "name": "regexp",
                    "type": "string"
                  },
                  {
                    "name": "newAlias",
                    "type": "string"
                  }
                ]
              },
              "params": [
                "/.*(%(Descartes|Erros)_(Entrada|Saída)).*/",
                "$1"
              ],
              "text": "replaceAlias(/(.*)/, $1)"
            }
          ],
          "group": {
            "filter": "/WAN/MODELO/"
          },
          "host": {
            "filter": "/$zabbix/"
          },
          "item": {
            "filter": "/^%(Descart|Erros).*$interface .*$circuito/"
          },
          "itemTag": {
            "filter": ""
          },
          "macro": {
            "filter": ""
          },
          "options": {
            "count": false,
            "disableDataAlignment": false,
            "showDisabledItems": false,
            "skipEmptyValues": false,
            "useTrends": "default",
            "useZabbixValueMapping": false
          },
          "proxy": {
            "filter": ""
          },
          "queryType": "0",
          "refId": "A",
          "resultFormat": "time_series",
          "schema": 12,
          "table": {
            "skipEmptyValues": false
          },
          "tags": {
            "filter": ""
          },
          "textFilter": "",
          "trigger": {
            "filter": ""
          }
        }
      ],
      "title": "Erros / Descartes",
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "revision": 1,
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_GDP_SUPCD}"
        },
        "definition": "select uf from utilizacaoelipsemodelo where cliente ~* 'MODELO' order by uf",
        "hide": 0,
        "includeAll": false,
        "label": "UF",
        "multi": false,
        "name": "uf",
        "options": [],
        "query": "select uf from utilizacaoelipsemodelo where cliente ~* 'MODELO' order by uf",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_GDP_SUPCD}"
        },
        "definition": "select p.nome from ponto p, cliente c where substring(p.id::text,1,4) = c.id::text and c.sigla = 'MODELO' and substring(p.nome::text,1,2) = '$uf' order by 1;",
        "hide": 0,
        "includeAll": false,
        "label": "Localidade",
        "multi": false,
        "name": "localidade",
        "options": [],
        "query": "select p.nome from ponto p, cliente c where substring(p.id::text,1,4) = c.id::text and c.sigla = 'MODELO' and substring(p.nome::text,1,2) = '$uf' order by 1;",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_GDP_SUPCD}"
        },
        "definition": "select p.hostname from  ponto p where  p.nome = '$localidade'",
        "hide": 2,
        "includeAll": false,
        "label": "Zabbix",
        "multi": false,
        "name": "zabbix",
        "options": [],
        "query": "select p.hostname from  ponto p where  p.nome = '$localidade'",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_GDP_SUPCD}"
        },
        "definition": "select classe from rede where hostname ~* '$zabbix' and classe != 'LAN' and classe != 'WAN' and classe !~ 'TUNEL'  order by classe desc",
        "hide": 0,
        "includeAll": false,
        "label": "Circuito",
        "multi": false,
        "name": "circuito",
        "options": [],
        "query": "select classe from rede where hostname ~* '$zabbix' and classe != 'LAN' and classe != 'WAN' and classe !~ 'TUNEL'  order by classe desc",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_GDP_SUPCD}"
        },
        "definition": "select iface from rede where hostname ~* '$zabbix' and tipo = '$circuito' order by 1 desc",
        "hide": 0,
        "includeAll": false,
        "label": "Interface",
        "multi": false,
        "name": "interface",
        "options": [],
        "query": "select iface from rede where hostname ~* '$zabbix' and tipo = '$circuito' order by 1 desc",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_GDP_SUPCD}"
        },
        "definition": "select kbps from rede where hostname ~* '$zabbix' and tipo = '$circuito' and iface = '$interface' order by 1",
        "hide": 2,
        "includeAll": false,
        "label": "Velocidade",
        "multi": false,
        "name": "velocidade",
        "options": [],
        "query": "select kbps from rede where hostname ~* '$zabbix' and tipo = '$circuito' and iface = '$interface' order by 1",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_GDP_SUPCD}"
        },
        "definition": "SELECT CONCAT(to_char(to_timestamp(${__from} / 1000)::date, 'DD-MM-YYYY') , ' a ', to_char(to_timestamp(${__to} / 1000)::date, 'DD-MM-YYYY') )",
        "hide": 2,
        "includeAll": false,
        "label": "data",
        "multi": false,
        "name": "data",
        "options": [],
        "query": "SELECT CONCAT(to_char(to_timestamp(${__from} / 1000)::date, 'DD-MM-YYYY') , ' a ', to_char(to_timestamp(${__to} / 1000)::date, 'DD-MM-YYYY') )",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_GDP_SUPCD}"
        },
        "definition": "select case when tipo = 'WANMAIS' then ' - Proprietário: MODELO'\n else ''\n end as tipo from\n  (select '$circuito'  as tipo )  t",
        "hide": 2,
        "includeAll": false,
        "label": "proprietario",
        "multi": false,
        "name": "proprietario",
        "options": [],
        "query": "select case when tipo = 'WANMAIS' then ' - Proprietário: MODELO'\n else ''\n end as tipo from\n  (select '$circuito'  as tipo )  t",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "hide": 2,
        "label": "link",
        "name": "link",
        "query": "${VAR_LINK}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_LINK}",
          "text": "${VAR_LINK}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_LINK}",
            "text": "${VAR_LINK}",
            "selected": false
          }
        ]
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {
    "hidden": false,
    "refresh_intervals": [
      "5m",
      "15m",
      "30m"
    ]
  },
  "timezone": "",
  "title": "InformacoesCircuitosRoteadoresMODELO",
  "uid": "InformacoesCircuitosRoteadoresMODELO",
  "version": 1,
  "weekStart": ""
}